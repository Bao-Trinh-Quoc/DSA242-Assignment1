################ a place for me to save my code #################


03/03/2024
done ArrayList. <--- now try to understand the code better.

DeleteUserData: 
A function pointer to a custom function for deleting user data, 
useful when the elements are pointers to dynamically allocated objects.

itemEqual: 
A function pointer to a custom function for comparing elements,
useful when the default comparison is not appropriate.


XArrayList<Point*> pointList(deletePoint, comparePoints); <--- ohhhhhh


04/03/2025
begin to implement DLinkedList
ok xong DLinkedList it nhat thi gio da co khaong 60% btl1

05/03/2025
I have some proposed changes in clear().
design wise now clear() will remove even dummy nodes.
not yet apply to this src code tho.

i probably will start code some of 1D list functions today. but man
i got lab to do

06/03/2025
Lets start 1D list functions
rightnow i will implement 1D list using XArrayList, there is no clear
answer which to use tho. just use what i think is good for this. 
will fix later if needed.

there is something like this in inventoryManager
 Note: You should implement this method with O(n2) time complexity to fully passed all
 the testcase.

implement constructor for 1D

The key insight is that in C++, the get(index) method in both XArrayList 
and DLinkedList returns a reference (T&), 
which means you can directly assign to the returned value to 
modify the element in the list. 
This is a common pattern in C++ container classes,
which allows for efficient modification of elements.

define operator<< of 1D list in class itself bcs:
This ensures that the compiler correctly associates the friend function with each template 
instantiation of the List1D class. The issue is that when you declare 
a non-template friend in a template class, it becomes a single function 
that tries to work with all template instantiations, which isn't possible.


10/03/2025

Updated DLinkedList.h: add instructor's implementation of class BWDIterator

hmm i think using DLinkedList is better for 2D List.

The string representation of List1D and List2D includes spaces. 
The description will be updated in v1.1.

ok learnt a bit of valgrind ig.


pretty weird thing to consider set in List1D 
what if index > this->size() ?? should i use add or throw exception?
I still think I need to throw exception.

btw we had sample code for XArrayList and DLinkedList so I can use that to test my code if needed.

tested my XArrayList in the testcase code tho and it passed.
probably will read both of the code to reflex later.

11/03/2025

just remember deadline for this assigment is 28/03 so I got three weeks left.